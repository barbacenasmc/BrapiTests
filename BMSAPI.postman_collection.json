{
	"info": {
		"_postman_id": "da675960-d814-44b8-ade4-7ece75259d72",
		"name": "BMSAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "brapi-authentication-service",
			"item": [
				{
					"name": "Get admin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf9362de-e5e8-48d1-8faf-847f7d31a2da",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.unset(\"masterToken\");",
									"pm.environment.set(\"masterToken\", jsonData.access_token);",
									"pm.environment.unset(\"masterTokenExpiry\");",
									"pm.environment.set(\"masterTokenExpiry\", jsonData.expires_in);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"@dm1N\",\r\n  \"grant_type\": \"\",\r\n  \"client_id\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/token",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get test user token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf9362de-e5e8-48d1-8faf-847f7d31a2da",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.unset(\"testuser_token\");",
									"pm.environment.set(\"testuser_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"apitestuser\",\r\n  \"password\": \"apitestuser\",\r\n  \"grant_type\": \"\",\r\n  \"client_id\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/token",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-call-services",
			"item": [
				{
					"name": "Verify calls with no specified format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check total call count\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.totalCount).to.eql(18);",
									"});",
									"",
									"",
									"pm.test(\"Check a call with json or application/json format\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[2].call).to.eql(\"locations\");",
									"    pm.expect(jsonData.result.data[2].dataTypes[0]).to.eql(\"application/json\");",
									"    pm.expect(jsonData.result.data[2].datatypes[0]).to.eql(\"json\");",
									"});",
									"",
									"pm.test(\"Check a call with tsv or text/tsv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8].call).to.eql(\"studies/{studyDbId}/table\");",
									"    pm.expect(jsonData.result.data[8].dataTypes[1]).to.eql(\"text/tsv\");",
									"    pm.expect(jsonData.result.data[8].datatypes[1]).to.eql(\"tsv\");",
									"    ",
									"});",
									"",
									"pm.test(\"Check if format of study table call is csv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8].call).to.eql(\"studies/{studyDbId}/table\");",
									"    pm.expect(jsonData.result.data[8].dataTypes[2]).to.eql(\"text/csv\");",
									"    pm.expect(jsonData.result.data[8].datatypes[2]).to.eql(\"csv\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b4530a0a-879c-43a6-9581-7aa6b73d92ba",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with csv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check a study table call\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].call).to.eql(\"studies/{studyDbId}/table\");",
									"        pm.expect(jsonData.result.data[0].datatypes[2]).to.eql(\"csv\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6646c58d-36c2-4f1f-b6c1-126003a2f6e5",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=csv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "csv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls tsv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check a study table call\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].call).to.eql(\"studies/{studyDbId}/table\");",
									"});",
									"",
									"pm.test(\"Check if format of samples call is tsv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].datatypes[1]).to.eql(\"tsv\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "334538f6-1ec9-4028-844e-d6756b29f336",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=tsv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "tsv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with json format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check a study table call\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8].call).to.eql(\"studies/{studyDbId}/table\");",
									"});",
									"",
									"",
									"pm.test(\"Check if format of samples call is tsv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8].datatypes[0]).to.eql(\"json\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc969cbc-0079-41ae-bb0f-9f99ce5cb35d",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=json",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with  text/csv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check total call count\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.totalCount).to.eql(1);",
									"});",
									"",
									"",
									"pm.test(\"Check a study table call\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].call).to.eql(\"studies/{studyDbId}/table\");",
									"        pm.expect(jsonData.result.data[0].dataTypes[2]).to.eql(\"text/csv\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a755db8c-6ae5-4020-b5af-be9a62060f27",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=text/csv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "text/csv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with text/tsv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check a study table call\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].call).to.eql(\"studies/{studyDbId}/table\");",
									"});",
									"",
									"pm.test(\"Check if format of samples call is tsv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].dataTypes[1]).to.eql(\"text/tsv\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "05ce8410-fb3d-4fa9-a51a-d78365995c33",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=text/tsv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "text/tsv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with application/json format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check total call count\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.totalCount).to.eql(18);",
									"});",
									"",
									"",
									"pm.test(\"Check token call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].call).to.eql(\"token\");",
									"    pm.expect(jsonData.result.data[0].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check crops call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].call).to.eql(\"crops\");",
									"    pm.expect(jsonData.result.data[1].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check locations call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[2].call).to.eql(\"locations\");",
									"    pm.expect(jsonData.result.data[2].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check phenotypes-search call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[3].call).to.eql(\"phenotypes-search\");",
									"    pm.expect(jsonData.result.data[3].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check programs call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[4].call).to.eql(\"programs\");",
									"    pm.expect(jsonData.result.data[4].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check samples/{sampleId} call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[5].call).to.eql(\"samples/{sampleId}\");",
									"    pm.expect(jsonData.result.data[5].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check studies call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[6].call).to.eql(\"studies\");",
									"    pm.expect(jsonData.result.data[6].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check studies/{studyDbId} call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[7].call).to.eql(\"studies/{studyDbId}\");",
									"    pm.expect(jsonData.result.data[7].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check studies/{studyDbId}/table call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8].call).to.eql(\"studies/{studyDbId}/table\");",
									"    pm.expect(jsonData.result.data[8].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check trials call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[9].call).to.eql(\"trials\");",
									"    pm.expect(jsonData.result.data[9].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check calls call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[11].call).to.eql(\"calls\");",
									"    pm.expect(jsonData.result.data[11].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check germplasm-search call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[12].call).to.eql(\"germplasm-search\");",
									"    pm.expect(jsonData.result.data[12].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check germplasm/{germplasmDbId} call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[13].call).to.eql(\"germplasm/{germplasmDbId}\");",
									"    pm.expect(jsonData.result.data[13].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check germplasm/{germplasmDbId}/pedigree call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[14].call).to.eql(\"germplasm/{germplasmDbId}/pedigree\");",
									"    pm.expect(jsonData.result.data[14].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check germplasm/{germplasmDbId}/progeny call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[15].call).to.eql(\"germplasm/{germplasmDbId}/progeny\");",
									"    pm.expect(jsonData.result.data[15].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"pm.test(\"Check search/germplasm call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[16].call).to.eql(\"search/germplasm\");",
									"    pm.expect(jsonData.result.data[16].dataTypes[0]).to.eql(\"application/json\");",
									"});",
									"",
									"pm.test(\"Check search/germplasm/{searchResultsDbid} call\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[17].call).to.eql(\"search/germplasm/{searchResultsDbid}\");",
									"    pm.expect(jsonData.result.data[17].dataTypes[0]).to.eql(\"application/json\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "62828547-84b8-47b1-98a1-905e9a45fdd9",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=application/json",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "application/json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify calls with application/flapjack",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3570823b-e7b2-441a-8fdd-23dcfa4a260a",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Check if format of samples call is tsv\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"not found calls\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d30d805c-15a0-4100-bfa4-60971ddc2ea9",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/calls?dataType=application/flapjack",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "dataType",
									"value": "application/flapjack"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-crop-services",
			"item": [
				{
					"name": "GET /brapi/v1/crops",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44b811fa-c481-4363-a9fb-d3c085b6154f",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check brachiaria crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0]).to.eql(\"brachiaria\");",
									"});",
									"",
									"pm.test(\"Check chickpea crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1]).to.eql(\"chickpea\");",
									"});",
									"",
									"pm.test(\"Check cowpea crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[2]).to.eql(\"cowpea\");",
									"});",
									"pm.test(\"Check groundnut crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[3]).to.eql(\"groundnut\");",
									"});",
									"pm.test(\"Check maize crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[4]).to.eql(\"maize\");",
									"});",
									"pm.test(\"Check rapeseed crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[5]).to.eql(\"rapeseed\");",
									"});",
									"pm.test(\"Check rice crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[6]).to.eql(\"rice\");",
									"});",
									"pm.test(\"Check sorghum crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[7]).to.eql(\"sorghum\");",
									"});",
									"pm.test(\"Check sorghum crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[8]).to.eql(\"testdata\");",
									"});",
									"pm.test(\"Check tomato crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[9]).to.eql(\"tomato\");",
									"});",
									"pm.test(\"Check wheat crop \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[10]).to.eql(\"wheat\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "87bf50d9-9ad1-4b44-8783-fed255ff8222",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/brapi/v1/crops",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"brapi",
								"v1",
								"crops"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-germplasm-services",
			"item": [
				{
					"name": "GET /{crop}/brapi/v1/germplasm-search using germplasmDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea061ca1-b996-4538-8f1a-cdb6f9146910",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check GID \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmDbId).to.eql(\"21\");",
									"});",
									"",
									"pm.test(\"Check defaultDisplayName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].defaultDisplayName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check accessionNumber \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].accessionNumber).to.eql(\"ACCNO1\");",
									"});",
									"",
									"pm.test(\"Check germplasmName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check germplasmPUI if null \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmPUI).to.eql(null);",
									"});",
									"pm.test(\"Check pedigree\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].pedigree).to.eql(\"CML1\");",
									"});",
									"  ",
									"pm.test(\"Check germplasmSeedSource\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmSeedSource).to.eql(\"AA001\");",
									"});",
									"  ",
									"pm.test(\"Check commonCropName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].commonCropName).to.eql(\"testdata\");",
									"});",
									"",
									"pm.test(\"Check instituteCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].instituteCode).to.eql(\"PROGM1\");",
									"});",
									"pm.test(\"Check instituteName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].instituteName).to.eql(\"PROGM1\");",
									"});",
									"",
									"pm.test(\"Check biologicalStatusOfAccessionCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].biologicalStatusOfAccessionCode).to.equal(null)",
									"});",
									"",
									"pm.test(\"Check countryOfOriginCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].countryOfOriginCode).to.eql(\"ORI_COUN1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6fd77ce3-dda1-4bab-85d3-6d75a707150b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm-search?germplasmDbId=21",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm-search"
							],
							"query": [
								{
									"key": "germplasmDbId",
									"value": "21"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm-search using germplasmName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea061ca1-b996-4538-8f1a-cdb6f9146910",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check GID \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmDbId).to.eql(\"21\");",
									"});",
									"",
									"pm.test(\"Check defaultDisplayName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].defaultDisplayName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check accessionNumber \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].accessionNumber).to.eql(\"ACCNO1\");",
									"});",
									"",
									"pm.test(\"Check germplasmName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check germplasmPUI if null \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmPUI).to.eql(null);",
									"});",
									"pm.test(\"Check pedigree\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].pedigree).to.eql(\"CML1\");",
									"});",
									"  ",
									"pm.test(\"Check germplasmSeedSource\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].germplasmSeedSource).to.eql(\"AA001\");",
									"});",
									"  ",
									"pm.test(\"Check commonCropName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].commonCropName).to.eql(\"testdata\");",
									"});",
									"",
									"pm.test(\"Check instituteCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].instituteCode).to.eql(\"PROGM1\");",
									"});",
									"pm.test(\"Check instituteName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].instituteName).to.eql(\"PROGM1\");",
									"});",
									"",
									"pm.test(\"Check biologicalStatusOfAccessionCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].biologicalStatusOfAccessionCode).to.equal(null)",
									"});",
									"",
									"pm.test(\"Check countryOfOriginCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].countryOfOriginCode).to.eql(\"ORI_COUN1\");",
									"});",
									"",
									"pm.test(\"Check genus\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].genus).to.eql(\"GENUS1\");",
									"});",
									"",
									"pm.test(\"Check species\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].species).to.eql(\"SPNAM1\");",
									"});",
									"",
									"pm.test(\"Check speciesAuthority\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].speciesAuthority).to.eql(\"SPAUTH1\");",
									"});",
									"",
									"pm.test(\"Check subtaxa\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].subtaxa).to.eql(\"SUBTAX1\");",
									"});",
									"",
									"pm.test(\"Check acquisitionDate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].acquisitionDate).to.eql(\"2018-10-25\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "55a20b17-d737-443b-a7a5-4d74f5d61362",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm-search?germplasmName=CML1",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm-search"
							],
							"query": [
								{
									"key": "germplasmName",
									"value": "CML1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm/{germplasmDbId} existing GID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f9346a0-b501-47af-b8d6-12717eeb22f8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check GID \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmDbId).to.eql(\"21\");",
									"});",
									"",
									"pm.test(\"Check defaultDisplayName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.defaultDisplayName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check accessionNumber \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.accessionNumber).to.eql(\"ACCNO1\");",
									"});",
									"",
									"pm.test(\"Check germplasmName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check germplasmPUI if null \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmPUI).to.eql(null);",
									"});",
									"pm.test(\"Check pedigree\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.pedigree).to.eql(\"CML1\");",
									"});",
									"  ",
									"pm.test(\"Check germplasmSeedSource\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmSeedSource).to.eql(\"AA001\");",
									"});",
									"  ",
									"pm.test(\"Check commonCropName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.commonCropName).to.eql(\"testdata\");",
									"});",
									"",
									"pm.test(\"Check instituteCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.instituteCode).to.eql(\"PROGM1\");",
									"});",
									"pm.test(\"Check instituteName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.instituteName).to.eql(\"PROGM1\");",
									"});",
									"",
									"pm.test(\"Check biologicalStatusOfAccessionCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.biologicalStatusOfAccessionCode).to.equal(null)",
									"});",
									"",
									"pm.test(\"Check countryOfOriginCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.countryOfOriginCode).to.eql(\"ORI_COUN1\");",
									"});",
									"",
									"pm.test(\"Check genus\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.genus).to.eql(\"GENUS1\");",
									"});",
									"",
									"pm.test(\"Check species\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.species).to.eql(\"SPNAM1\");",
									"});",
									"",
									"pm.test(\"Check speciesAuthority\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.speciesAuthority).to.eql(\"SPAUTH1\");",
									"});",
									"",
									"pm.test(\"Check subtaxa\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.subtaxa).to.eql(\"SUBTAX1\");",
									"});",
									"",
									"pm.test(\"Check acquisitionDate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.acquisitionDate).to.eql(\"2018-10-25\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e2a9b5c-a715-4a81-a936-5a20eed0abe0",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm/{{germplasmDbId}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm",
								"{{germplasmDbId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm/{germplasmDbId} non-existing GID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72ae4a8-dd71-4e7e-92f8-d6d0b0fb714d",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response message is no germplasm found \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"no germplasm found\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5f5d6a4d-f7fd-4b27-9f9c-6e92e15ba48f",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm/{{nonExistingGID}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm",
								"{{nonExistingGID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm/{germplasmDbId}/pedigree",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72ae4a8-dd71-4e7e-92f8-d6d0b0fb714d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check germplasmDbId \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmDbId).to.eql(41);",
									"});",
									"pm.test(\"Check defaultDisplayName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.defaultDisplayName).to.eql(\"IB1\");",
									"});",
									"pm.test(\"Check pedigree \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.pedigree).to.eql(\"IB1\");",
									"});",
									"pm.test(\"Check crossingPlan \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.crossingPlan).to.eql(\"Single cross\");",
									"});",
									"pm.test(\"Check crossingYear \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.crossingYear).to.eql(2018);",
									"});",
									"pm.test(\"Check familyCode \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.familyCode).to.equal(null);",
									"});",
									"pm.test(\"Check parent1DbId \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent1DbId).to.eql(21);",
									"});",
									"",
									"pm.test(\"Check parent1Name \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent1Name).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check parent1Type \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent1Type).to.eql(\"FEMALE\");",
									"});",
									"",
									"pm.test(\"Check parent2DbId \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent2DbId).to.eql(26);",
									"});",
									"",
									"pm.test(\"Check parent2Name \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent2Name).to.eql(\"CML6\");",
									"});",
									"pm.test(\"Check parent2Type \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.parent2Type).to.eql(\"MALE\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2c08c1c4-aa36-4463-a3af-41aa2b2e0eac",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm/{{crossGID}}/pedigree",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm",
								"{{crossGID}}",
								"pedigree"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm/{germplasmDbId}/progeny",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72ae4a8-dd71-4e7e-92f8-d6d0b0fb714d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check germplasmDbId \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.germplasmDbId).to.eql(21);",
									"});",
									"pm.test(\"Check defaultDisplayName \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.defaultDisplayName).to.eql(\"CML1\");",
									"});",
									"pm.test(\"Check progeny details \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.progeny[0].germplasmDbId).to.eql(41);",
									"    pm.expect(jsonData.result.progeny[0].defaultDisplayName).to.eql(\"IB1\");",
									"   pm.expect(jsonData.result.progeny[0].parentType).to.eql(\"FEMALE\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ad711806-8de1-420b-9a5b-1d4e5d6e5c98",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm/{{germplasmDbId}}/progeny",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm",
								"{{germplasmDbId}}",
								"progeny"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/germplasm/{germplasmDbId}/pedigree non-existing GID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a72ae4a8-dd71-4e7e-92f8-d6d0b0fb714d",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response message is no germplasm found \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"no germplasm found\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd7b83ec-15f8-47c6-95a6-bf4bc8a37c4a",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/germplasm/{{nonExistingGID}}/pedigree",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"germplasm",
								"{{nonExistingGID}}",
								"pedigree"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-location-services",
			"item": [
				{
					"name": "GET /{crop}/brapi/v1/locations crop name only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da810de3-469b-4627-8f22-cb9ad3d22afe",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check total results\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.totalCount).to.eql(5069);",
									"});",
									"",
									"pm.test(\"Check a country location\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].name).to.eql(\"Afghanistan\") &&",
									"    pm.expect(jsonData.result.data[1].locationType).to.eql(\"Country\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/locations",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/locations with pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da810de3-469b-4627-8f22-cb9ad3d22afe",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check current page\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.currentPage).to.eql(0)",
									"});",
									"",
									"pm.test(\"Check pageSize\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.pageSize).to.eql(100)",
									"});",
									"",
									"pm.test(\"Check total results\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.pagination.totalCount).to.eql(5069);",
									"});",
									"",
									"pm.test(\"Check a country location\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].name).to.eql(\"Afghanistan\") &&",
									"    pm.expect(jsonData.result.data[1].locationType).to.eql(\"Country\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/locations?page=0&pageSize=100",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"locations"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/locations with location type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da810de3-469b-4627-8f22-cb9ad3d22afe",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check location type of first result item\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].locationType).to.eql(\"Breeding Location\")",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/locations?locationType=breeding location",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"locations"
							],
							"query": [
								{
									"key": "locationType",
									"value": "breeding location"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-program-services",
			"item": [
				{
					"name": "GET /{crop}/brapi/v1/programs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8569a9e-5224-46c7-a717-f4fba4827191",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check programDbId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"});",
									"pm.test(\"Check programName\",function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].name).to.eql(\"API Program\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c719a90c-eb00-4229-9148-d1c4c1597c84",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/programs",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/programs json format only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8569a9e-5224-46c7-a717-f4fba4827191",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check programDbId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"});",
									"pm.test(\"Check programName\",function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].name).to.eql(\"API Program\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "301e2866-3cd4-4ccd-842e-ecb8d99c4771",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/programs",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/programs csv format only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8569a9e-5224-46c7-a717-f4fba4827191",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check programDbId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"});",
									"pm.test(\"Check programName\",function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].name).to.eql(\"API Program\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d7bf61b3-9ec8-40a9-8cef-5b45e50e08f2",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/programs",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/programs tsv format only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8569a9e-5224-46c7-a717-f4fba4827191",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check programDbId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"});",
									"pm.test(\"Check programName\",function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].name).to.eql(\"API Program\");",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f9a1b189-5257-4362-b022-d71c9a322e55",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/programs",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"programs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "study-services",
			"item": [
				{
					"name": "GET /study/{cropname}/{studyId}/observations",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/bmsapi/study/{{crop}}/{{studyId}}/observations?instanceId=623",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"bmsapi",
								"study",
								"{{crop}}",
								"{{studyId}}",
								"observations"
							],
							"query": [
								{
									"key": "instanceId",
									"value": "623"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "dataset-services",
			"item": [
				{
					"name": "GET /crops/{crop}/studies/{studyId}/datasets",
					"item": [
						{
							"name": "Verify response code and body when entered crop and studyId only",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check env dataset id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.equal(parseInt(pm.environment.get(\"study_env_id\")));",
											"});",
											"pm.test(\"Check env plot dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[1].datasetId).to.eql(parseInt(pm.environment.get(\"study_plot_datasetId\")));",
											"});",
											"pm.test(\"Check subobs dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[2].datasetId).to.eql(parseInt(pm.environment.get(\"study_subobs_datasetId\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30203e62-f97c-4f71-870e-812b86dc3788",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered multiple datasetTypeIds",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check env dataset id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.equal(parseInt(pm.environment.get(\"study_env_id\")));",
											"});",
											"pm.test(\"Check env plot dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[1].datasetId).to.eql(parseInt(pm.environment.get(\"study_plot_datasetId\")));",
											"});",
											"pm.test(\"Check subobs dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[2].datasetId).to.eql(parseInt(pm.environment.get(\"study_subobs_datasetId\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3fe5643c-c3db-466b-b910-fb1be5860d8c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{env_datasetTypeId}}, {{plot_datasetTypeId}},{{plant_subobs_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{env_datasetTypeId}}, {{plot_datasetTypeId}},{{plant_subobs_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered environment datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check env dataset id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.equal(parseInt(pm.environment.get(\"study_env_id\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6af63a45-19b6-45db-9e23-6be5a1c27d88",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{env_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{env_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered plot datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check env plot dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.eql(parseInt(pm.environment.get(\"study_plot_datasetId\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "507f84e0-513a-4503-9a30-d2db8c097ffa",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{plot_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{plot_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered means datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check means dataset id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.equal(parseInt(pm.environment.get(\"trialMeansDatasetId\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "11c83acc-f9a2-4034-ad41-1a87eee81161",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{trialStudyId}}/datasets?datasetTypeIds={{means_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{trialStudyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{means_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered subobs datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check subobs dataset id\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].datasetId).to.eql(parseInt(pm.environment.get(\"study_subobs_datasetId\")));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8ac71c51-89a6-4a4f-84b1-84b9b149d7c9",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{plant_subobs_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{plant_subobs_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to  studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d5cd3c4a-349c-45e7-9b86-e05ed3c6dfcc",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to  datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af73f0eb-b5f8-4699-a1a7-7d9468c28240",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{string_input}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered invalid  datasetTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8961d00-1405-473a-ae6f-e783ae64130e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"//Add other assertions here",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"9,999 is not a valid dataset type\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ef9ed08b-6f7f-4ea3-ab61-ff3688d84446",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets?datasetTypeIds={{non_existing_datasetTypeId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets"
									],
									"query": [
										{
											"key": "datasetTypeIds",
											"value": "{{non_existing_datasetTypeId}}"
										}
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets\n"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET/{crop}/studies/{studyId}/datasets/{datasetId}",
					"item": [
						{
							"name": "Verify response code and body when entered of environment datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.studyId).to.eql(studyId);",
											"});",
											"pm.test(\"Verify returned datasetId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var datasetId = Number(pm.environment.get(\"study_env_id\"));",
											"    pm.expect(jsonData.datasetId).to.eql(datasetId);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fb5072c8-389a-4dbb-b6ca-8a62fdf935b3",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_env_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_env_id}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered of plot datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.studyId).to.eql(studyId);",
											"});",
											"pm.test(\"Verify returned datasetId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var datasetId = Number(pm.environment.get(\"study_plot_datasetId\"));",
											"    pm.expect(jsonData.datasetId).to.eql(datasetId);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e0b602a1-b5ea-44a8-93c0-76195919007c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered of sub-observation datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.studyId).to.eql(studyId);",
											"});",
											"pm.test(\"Verify returned datasetId\", function () {",
											"    var jsonData = pm.response.json();",
											"    var datasetId = Number(pm.environment.get(\"study_subobs_datasetId\"));",
											"    pm.expect(jsonData.datasetId).to.eql(datasetId);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "710bdfd7-52c7-405a-9122-6b1608f2c674",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered of means datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"//Other assertions to follow"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f9fa5023-1aae-45ae-b3b1-25bfcf3866cc",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{trialStudyId}}/datasets/{{trialMeansDatasetId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{trialStudyId}}",
										"datasets",
										"{{trialMeansDatasetId}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "122fe7c4-8a36-4efd-abb9-f0ba4cda060d",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_plot_datasetId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_plot_datasetId}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"//    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "036a26ad-5e4f-4118-b64c-f425bdfe3c06",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"//    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b865acdf-675a-4860-9e50-2c8fdf11762d",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_subobs_datasetId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_subobs_datasetId}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e37ce7ea-e131-45f2-b8b4-1f957fe374a8",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify returned studyId\", function () {",
											"    var jsonData = pm.response.json();",
											"//    var studyId = Number(pm.environment.get(\"studyId\"));",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "52bbae1d-8680-4239-9082-10ecb0fc437c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}"
									]
								},
								"description": "GET/{crop}/studies/{studyId}/datasets/{datasetId}"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances",
					"item": [
						{
							"name": "Verify response code and body when entered valid parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check instanceDbId\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].instanceDbId).to.eql(1);",
											"});",
											"pm.test(\"Check locationName\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].locationName).to.eql(\"Africa Rice Centre\");",
											"});",
											"",
											"pm.test(\"Check locationAbbreviation\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].locationAbbreviation).to.eql(\"WARDA\");",
											"});",
											"pm.test(\"Check instanceNumber\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].instanceNumber).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3be42283-6d6c-40ff-ba0c-04a23a098e72",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "962b8f44-226f-4cff-aeb6-9879c150ad20",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_subobs_datasetId}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cab324c7-b915-4a40-9363-c32b0bc3a4f3",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not associated to the studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Specified dataset 3022 does not belong to the study 3009\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "44a0603d-c719-4081-a04a-66513f2a21f7",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{locked_study_subobs_datasetId}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{locked_study_subobs_datasetId}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not a subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 501\", function () {",
											"    pm.response.to.have.status(501);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset is not a subobservation dataset.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8645689c-d65f-44c6-ac61-29679d7cdd95",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "460e9de2-2412-4a1d-9749-498156a35d12",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_subobs_datasetId}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9358a303-74be-4747-941f-96af832dea89",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/instances",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"instances"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/instances"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}",
					"item": [
						{
							"name": "Retrieve phenotype counts for a plot dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"80\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb168629-7517-4159-96d5-55bb8dbaaefd",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Retrieve phenotype counts for a subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"80\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ea126295-3fff-4a3e-9a02-84810ae4f501",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs2_datasetId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs2_datasetId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and phenotype count for a dataset with no existing phenotypes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"0\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7f800e14-1a99-4d8a-bee4-d8135eb5ea58",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId_noPhenoCount}}/datasets/{{study_plot_dataset_id_noPhenoCount}}/observationUnits/{{study_noPheno_instandId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId_noPhenoCount}}",
										"datasets",
										"{{study_plot_dataset_id_noPhenoCount}}",
										"observationUnits",
										"{{study_noPheno_instandId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f9890a20-9571-41be-908e-549db25429b8",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_plot_datasetId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9c1df85c-3c80-4896-bb07-fcdb512f4317",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered invalid studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b8915fd-f436-44a2-9452-782b689b921c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{invalid_studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{invalid_studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered invalid datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb0dd970-ab29-4a71-9e01-b604daa501c7",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{studyId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{studyId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered invalid instanceId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e3db2d39-7069-4497-883d-7e643c23573b",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/{{studyId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{studyId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4fc4d2c3-d972-4dc1-b14e-281ff348baf8",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_plot_datasetId}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af7e99fd-1e9c-4024-81ae-5aa32ad76842",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/observationUnits/{{study_instanceId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"observationUnits",
										"{{study_instanceId}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						},
						{
							"name": "Verify response code when entered string input to instanceId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "80c45139-aca4-4539-81da-74a64e224c56",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/{{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{string_input}}"
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{instanceId}"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns",
					"item": [
						{
							"name": "Verify response code and body when entered valid parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check TRIAL INSTANCE term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].termId).to.equal(8170);",
											"    pm.expect(jsonData[0].name).to.equal(\"TRIAL_INSTANCE\");",
											"});",
											"",
											"pm.test(\"Check ENTRY TYPE term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[1].termId).to.equal(8255);",
											"    pm.expect(jsonData[1].name).to.equal(\"ENTRY_TYPE\");",
											"});",
											"",
											"pm.test(\"Check GID term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[2].termId).to.equal(8240);",
											"    pm.expect(jsonData[2].name).to.equal(\"GID\");",
											"});",
											"",
											"pm.test(\"Check DESIGNATION term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[3].termId).to.equal(8250);",
											"    pm.expect(jsonData[3].name).to.equal(\"DESIGNATION\");",
											"});",
											"",
											"pm.test(\"Check ENTRY_NO term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[4].termId).to.equal(8230);",
											"    pm.expect(jsonData[4].name).to.equal(\"ENTRY_NO\");",
											"});",
											"",
											"pm.test(\"Check OBS_UNIT_ID term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[5].termId).to.equal(8201);",
											"    pm.expect(jsonData[5].name).to.equal(\"OBS_UNIT_ID\");",
											"});",
											"",
											"",
											"pm.test(\"Check PLOT_NO term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[6].termId).to.equal(8200);",
											"    pm.expect(jsonData[6].name).to.equal(\"PLOT_NO\");",
											"});",
											"",
											"pm.test(\"Check PLANT_NO term id and name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[7].termId).to.equal(8206);",
											"    pm.expect(jsonData[7].name).to.equal(\"PLANT_NO\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fa61ed55-2808-45f2-b574-cf244efc8e51",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d9416b9a-5f5a-434c-bbcd-5dd86770a829",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_subobs_datasetId}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ddf14d75-31d9-4f8e-924e-9dc1a5a43250",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not associated to the studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Specified dataset 3022 does not belong to the study 3009\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4d2dd366-6236-4a2b-85a7-50a3e2c99757",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{locked_study_subobs_datasetId}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{locked_study_subobs_datasetId}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not a subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 501\", function () {",
											"    pm.response.to.have.status(501);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset is not a subobservation dataset.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7b18e5fe-bc72-48e4-b8f0-9c54b35fdc72",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e240aacd-7c9e-40d0-afc4-c7d96618db88",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_subobs_datasetId}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd5dcc0-620e-4b86-80d7-dc76cb0b9673",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f11ca8ce-69be-47a6-be51-e1f350bb24ce",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/observationUnits/table/columns",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"observationUnits",
										"table",
										"columns"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/table/columns"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}",
					"item": [
						{
							"name": "Verify response code and body when entered valid inputs and trait variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned variable id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].id).to.equal(18100);",
											"    pm.expect(jsonData[1].id).to.equal(18000);",
											"    pm.expect(jsonData[2].id).to.equal(18010);",
											"});",
											"",
											"pm.test(\"Check returned variable names\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].name).to.equal(\"WeedPressure_number\");",
											"    pm.expect(jsonData[1].name).to.equal(\"Grain_yield\");",
											"    pm.expect(jsonData[2].name).to.equal(\"Biomas_yield\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0331c16a-0f37-4d69-928c-b7312cf1838c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/{{Trait_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{Trait_cvtermId}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered valid inputs and environment detail variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned variable id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].id).to.equal(8170);",
											"});",
											"",
											"pm.test(\"Check returned variable name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].name).to.equal(\"TRIAL_INSTANCE\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c16add58-352e-4c05-bc17-b9c895e1b0e9",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/{{variableTypeId_env_detail}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{variableTypeId_env_detail}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered valid inputs and experimental design variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned variable id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].id).to.equal(8200);",
											"});",
											"",
											"pm.test(\"Check returned variable name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].name).to.equal(\"PLOT_NO\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a25631a2-c0f6-4986-98f2-49df54e929e4",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/{{variableTypeId_exp_design}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{variableTypeId_exp_design}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered valid inputs and germplasm descriptor variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned variable id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].id).to.equal(8255);",
											"    pm.expect(jsonData[1].id).to.equal(8240);",
											"    pm.expect(jsonData[2].id).to.equal(8250);",
											"    pm.expect(jsonData[3].id).to.equal(8230);",
											"    pm.expect(jsonData[4].id).to.equal(8201);",
											"});",
											"",
											"pm.test(\"Check returned variable name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].name).to.equal(\"ENTRY_TYPE\");",
											"    pm.expect(jsonData[1].name).to.equal(\"GID\");",
											"    pm.expect(jsonData[2].name).to.equal(\"DESIGNATION\");",
											"    pm.expect(jsonData[3].name).to.equal(\"ENTRY_NO\");",
											"    pm.expect(jsonData[4].name).to.equal(\"OBS_UNIT_ID\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0f143088-ee90-4a02-bbbc-1a8a2469f89c",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/{{variableTypeId_germ_desc}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{variableTypeId_germ_desc}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered valid inputs and observation units variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned variable id\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].id).to.equal(8206);",
											"});",
											"",
											"pm.test(\"Check returned variable name\", function() {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].name).to.equal(\"PLANT_NO\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0656cc33-d5d3-470f-81b6-97d6e6f067ef",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables/{{variableTypeId_obs_unit}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables",
										"{{variableTypeId_obs_unit}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "090307ac-448c-4cfc-893b-aa1697705699",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_plot_datasetId}}/variables/{{Trait_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{Trait_cvtermId}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "50a0ddf0-2f6b-469d-8fc1-edcab0b9f05e",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/variables/{{Trait_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"variables",
										"{{Trait_cvtermId}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "56b4b2f5-a622-4bc4-b4db-55bc8542653d",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_plot_datasetId}}/variables/{{Trait_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{Trait_cvtermId}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef2576e-0492-4825-98f1-ef7da96aaadb",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/variables/{{Trait_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"variables",
										"{{Trait_cvtermId}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to variableTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed945ed-1c5e-4a2a-a094-5d265d301385",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "148e1b80-ee2e-401b-b700-8b9287320847",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/{{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"{{string_input}}"
									]
								},
								"description": "GET /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/{variableTypeId}"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "HEAD /crops/{crop}/{studyId}/datasets/{datasetId}/variables/observations",
					"item": [
						{
							"name": "Verify response code and body when entered valid inputs and one variableId only",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"20\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "930c6a21-00a3-4eec-b65c-eb6bfeee0e7d",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify X-Total Count for study with no phenotypes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"0\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b193140-07b9-4d5d-9d2c-769e6be06974",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId_noPhenoCount}}/datasets/{{study_plot_dataset_id_noPhenoCount}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId_noPhenoCount}}",
										"datasets",
										"{{study_plot_dataset_id_noPhenoCount}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when enterd multiple variableIds",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89069dcf-9985-4e37-9a85-905ab83b7bef",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"X-Total-Count is correct\", function () {",
											"    pm.response.to.be.header(\"X-Total-Count\", \"60\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a662686-b9f4-4980-908f-d0f5df1ffe96",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/observations?variableIds={{study_biomass_cvterm_id}},{{study_weedPressure_cvterm_id}},{{study_grainYield_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}},{{study_weedPressure_cvterm_id}},{{study_grainYield_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89069dcf-9985-4e37-9a85-905ab83b7bef",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7b48a69d-3d93-4327-a6f2-26dfc7c3118d",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{nonExistingGID}}/datasets/{{study_plot_datasetId}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{nonExistingGID}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89069dcf-9985-4e37-9a85-905ab83b7bef",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d64f6e22-0d31-4654-af16-8af25ba7afac",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{non_existing_dataset_id}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89069dcf-9985-4e37-9a85-905ab83b7bef",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bb290356-cb27-473c-bda3-faa5e9eed9af",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_plot_dataset_id}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_plot_dataset_id}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89069dcf-9985-4e37-9a85-905ab83b7bef",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a2a3b9d3-a479-4ff8-aa3f-14a7a28952b1",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/variables/observations?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string inputs to variableId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccbc022e-2d93-4126-990a-69e998e5908e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f76ab43e-99bd-43ed-aa3c-d2bfa5a298dc",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables/observations?variableIds={{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables",
										"observations"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{string_input}}"
										}
									]
								},
								"description": "HEAD /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables/observations"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables",
					"item": [
						{
							"name": "Verify adding variable to a sub obs dataset with a numeric scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check returned \", function () {",
											"    var jsonData = pm.response.json();",
											"    var biomasId = Number(pm.environment.get(\"study_biomass_cvterm_id\"));",
											"    pm.expect(jsonData.termId).to.equal(biomasId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d0592711-bb36-4835-97ef-be3eb638d2f6",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"studyAlias\": \"Biomas_yield\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify adding variable to a sub obs dataset with a categorical scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check returned \", function () {",
											"    var jsonData = pm.response.json();",
											"    var biomasId = Number(pm.environment.get(\"study_pestpressure_cvtermId\"));",
											"    pm.expect(jsonData.termId).to.equal(biomasId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "77769718-bf98-47b7-b9a7-962c12ec1c2b",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_pestpressure_cvtermId}}\",\r\n  \"studyAlias\": \"PestPressure_0_9\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableId={{study_pestpressure_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableId",
											"value": "{{study_pestpressure_cvtermId}}"
										}
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify adding variable to a sub obs dataset with a character scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check returned \", function () {",
											"    var jsonData = pm.response.json();",
											"    var biomasId = Number(pm.environment.get(\"study_notes_cvtermId\"));",
											"    pm.expect(jsonData.termId).to.equal(biomasId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fca6161e-b673-4f34-828a-5e6689b793b0",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_notes_cvtermId}}\",\r\n  \"studyAlias\": \"NOTES\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify adding variable to a sub obs dataset with a date scale",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check returned \", function () {",
											"    var jsonData = pm.response.json();",
											"    var varId = Number(pm.environment.get(\"germitest_date_cvtermId\"));",
											"    pm.expect(jsonData.termId).to.equal(varId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8e96f788-96ec-4ea0-8e7a-95c5df9b1572",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{germitest_date_cvtermId}}\",\r\n  \"studyAlias\": \"GermiTest_date\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not a subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 501\", function () {",
											"    pm.response.to.have.status(501);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Dataset is not a subobservation dataset.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ebf54983-3cbe-43ec-8c8a-310361e140c6",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_notes_cvtermId}}\",\r\n  \"studyAlias\": \"NOTES\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "181ba3ce-e903-4db0-b120-1f70e5dca380",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_notes_cvtermId}}\",\r\n  \"studyAlias\": \"NOTES\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1ebfcadc-da06-4857-8803-068470141b96",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_notes_cvtermId}}\",\r\n  \"studyAlias\": \"NOTES\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify adding variable that is already associated to the dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Variable with id 18010 is already a variable of dataset.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8721c7d9-bd63-477f-8ca3-80b12c53cc89",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"studyAlias\": \"Biomas_yield\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered variable that is not of given variable type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Variable is not of given variable type.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "25fd9514-6443-4ba0-95f2-b5a5a4d062b9",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{site_soil_ph_cvtermId}}\",\r\n  \"studyAlias\": \"SITE_SOIL_PH\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered selection variable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check returned \", function () {",
											"    var jsonData = pm.response.json();",
											"    var varId = Number(pm.environment.get(\"npsel_cvtermId\"));",
											"    pm.expect(jsonData.termId).to.equal(varId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "17282511-da5a-4826-b4b4-f0b33d59d869",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{selection_method_cvtermId}}\",\r\n  \"variableId\": \"{{npsel_cvtermId}}\",\r\n  \"studyAlias\": \"NPSEL\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered not supported variable type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 501\", function () {",
											"    pm.response.to.have.status(501);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Variable type is not supported.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fb07a0a4-0bb0-4748-9e5c-ad1da3da5d06",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{study_condition_cvtermId}}\",\r\n  \"variableId\": \"{{site_soil_ph_cvtermId}}\",\r\n  \"studyAlias\": \"SITE_SOIL_PH\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify if locked study cannot be updated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d3d0b2-bf51-4f59-b89f-19400928ae64",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.equal(\"Study is locked\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ac150c13-751b-4042-bbed-42eb671bfbd6",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"apitestuser\",",
											"                \"password\": \"apitestuser\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"testuser_token\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{testuser_token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"variableTypeId\": \"{{Trait_cvtermId}}\",\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"studyAlias\": \"Biomas_yield\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{locked_studyId}}/datasets/{{locked_study_subobs_datasetId}}/variables",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{locked_studyId}}",
										"datasets",
										"{{locked_study_subobs_datasetId}}",
										"variables"
									]
								},
								"description": "PUT /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}",
					"item": [
						{
							"name": "Verify if user can add accepted observation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.test(\"Check returned variableId \", function () {",
											"    var biomasId = Number(pm.environment.get(\"study_biomass_cvterm_id\"));",
											"    pm.expect(jsonData.variableId).to.equal(biomasId);",
											"});",
											"pm.test(\"Check returned value \", function () {",
											"    pm.expect(jsonData.value).to.equal(\"5\");",
											"});",
											"",
											"pm.test(\"Check returned categoricalValueId \", function () {",
											"    pm.expect(jsonData.categoricalValueId).to.equal(null);",
											"});",
											"pm.test(\"Check returned status \", function () {",
											"    pm.expect(jsonData.status).to.equal(null);",
											"});",
											"pm.test(\"Check returned observationUnitId \", function () {",
											"    var observationUnitId = Number(pm.environment.get(\"study_observationUnitId\"));",
											"    pm.expect(jsonData.observationUnitId).to.equal(observationUnitId);",
											"});",
											"pm.test(\"Check returned draftCategoricalValueId \", function () {",
											"    pm.expect(jsonData.draftCategoricalValueId).to.equal(null);",
											"});",
											"pm.test(\"Check returned draftValue \", function () {",
											"    pm.expect(jsonData.draftValue).to.equal(null);",
											"});",
											"pm.test(\"Check returned draftMode \", function () {",
											"    pm.expect(jsonData.draftMode).to.equal(false);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "523073c0-5d5a-4a94-9554-bd9113ee8a45",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "64eeeba0-ef27-4ed7-b6ec-346ce7e634b9",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_subobs_datasetId}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de8863fa-4426-4328-87fc-85ed464f7912",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "65ac153d-a674-4e7b-a3b4-ea5bdf29a702",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_observationUnitId}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_observationUnitId}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b5d672c4-2df1-4a8a-8400-bfc7c5ca05e3",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to observationUnitId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e496e43e-1c3a-48f4-9db5-c84544cbce4e",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/observationUnits/{{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"{{string_input}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered datasetId that is not a subobs dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 501\", function () {",
											"    pm.response.to.have.status(501);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset is not a subobservation dataset.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "61a5b2b1-3d96-40e3-aa1e-5ed0a61a8af5",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_plot_datasetId}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_plot_datasetId}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered studyId and subobs datasetId do not belong to each other",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Specified dataset 3017 does not belong to the study 3013\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6d599adb-358c-49a4-9c88-ca967b5d7548",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{trialStudyId}}/datasets/{{study_subobs_datasetId}}/observationUnits/{{study_observationUnitId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{trialStudyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"{{study_observationUnitId}}"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered invalid observationUnitId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1abccc7b-cf55-4065-b182-061588ec1222",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify error message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Invalid observation unit id.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bd93d742-d118-4f7b-9b1d-5c7416770e6b",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"categoricalValueId\": null,\r\n  \"variableId\": \"{{study_biomass_cvterm_id}}\",\r\n  \"value\": \"5\",\r\n  \"observationUnitId\": \"{{study_observationUnitId}}\"\r\n}"
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/observationUnits/500",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"observationUnits",
										"500"
									]
								},
								"description": "POST /crops/{crop}/studies/{studyId}/datasets/{datasetId}/observationUnits/{observationUnitId}"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables",
					"item": [
						{
							"name": "Delete an existing numeric trait from subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "36facdeb-a11d-49dd-be61-831dfb6b63b9",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_biomass_cvterm_id}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_biomass_cvterm_id}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Delete an existing categorical trait from subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "45b7d813-0eb3-4733-b9fd-2b20b905a404",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_pestpressure_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_pestpressure_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Delete an existing character trait from subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "521fbf74-7f74-43c5-b4f0-2b67868c3965",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Delete an existing date trait from subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5887ba-190e-4ec9-8eeb-842cc5b94f93",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{germitest_date_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{germitest_date_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Delete an existing selection variable from subobservation dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "546c3c89-49df-4bf9-b366-8968a620c514",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{npsel_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{npsel_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered a variableId that is not existing in the dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Variable with id 8390 is not a variable of dataset or it exists with unsupported variable type.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f81cc795-6da7-48ca-a69b-05db2c123d90",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Study does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c99aa307-6427-4157-a103-a5f19836010a",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{non_existing_study_id}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{non_existing_study_id}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered non-existing datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"Dataset does not exist\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d2afa864-70ee-4f46-a218-0f94aa989c34",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{non_existing_dataset_id}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{non_existing_dataset_id}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to studyId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "88a113b3-5f49-43f2-bb0c-e1f655aa1c61",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{string_input}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{string_input}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to datasetId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "954398a5-c438-46a3-b9b6-7ed3fe7bd9d2",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{string_input}}/variables?variableIds={{study_notes_cvtermId}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{string_input}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{study_notes_cvtermId}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						},
						{
							"name": "Verify response code and body when entered string input to variableId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7578865-fbb7-460c-b36c-15a6b6fb0d84",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"pm.test(\"Verify response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors[0].message).to.eql(\"For input string: \\\"asd\\\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4b24224f-79a8-4171-b284-3d7ac0b41be1",
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify(",
											"            { ",
											"                \"username\": \"admin\",",
											"                \"password\": \"@dm1N\",",
											"                \"grant_type\": \"\",",
											"                \"client_id\": \"\"",
											"            ",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    var jsonData = res.json();",
											"    pm.environment.set(\"masterToken\",jsonData.access_token);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/crops/{{crop}}/studies/{{studyId}}/datasets/{{study_subobs_datasetId}}/variables?variableIds={{string_input}}",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"crops",
										"{{crop}}",
										"studies",
										"{{studyId}}",
										"datasets",
										"{{study_subobs_datasetId}}",
										"variables"
									],
									"query": [
										{
											"key": "variableIds",
											"value": "{{string_input}}"
										}
									]
								},
								"description": "DELETE /crops/{crop}/studies/{studyId}/datasets/{datasetId}/variables"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "crop-resource",
			"item": [
				{
					"name": "GET /crop/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0166ded3-e1c4-46b5-975e-0ac2c4c69240",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check brachiaria crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"brachiaria\");",
									"});",
									"",
									"pm.test(\"Check chickpea crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"chickpea\");",
									"});",
									"",
									"pm.test(\"Check cowpea crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"cowpea\");",
									"});",
									"",
									"pm.test(\"Check groundnut crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"groundnut\");",
									"});",
									"",
									"pm.test(\"Check maize crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"maize\");",
									"});",
									"",
									"pm.test(\"Check rapeseed crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"rapeseed\");",
									"});",
									"pm.test(\"Check rice crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"rice\");",
									"});",
									"pm.test(\"Check sorghum crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"sorghum\");",
									"});",
									"",
									"pm.test(\"Check tomato crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"tomato\");",
									"});",
									"",
									"pm.test(\"Check testdata crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"crop\"));",
									"});",
									"",
									"pm.test(\"Check wheat crop \", function() {",
									"    pm.expect(pm.response.text()).to.include(\"wheat\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c251659d-4dec-435c-8e95-ae3ec6a0098b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/crop/list",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"crop",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "germplasm-list-services",
			"item": [
				{
					"name": "GET /germplasmList/{cropname}/{listId} existing listId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4253f6b8-4cff-47bf-9d45-21c1461bc12b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check list ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.listId).to.eql(JSON.parse(pm.environment.get(\"listId\")));",
									"});",
									"",
									"pm.test(\"Check list name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.listName).to.eql(\"Germplasm List 0001\");",
									"});",
									"",
									"pm.test(\"Check list description\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql(\"List with nametypes and attributes\");",
									"});",
									"",
									"pm.test(\"Check list size\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.listSize).to.eql(20);",
									"});",
									"",
									"pm.test(\"Check details of the first germplasm entry\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.germplasmEntries[0].gid).to.eql(21);",
									"    pm.expect(jsonData.germplasmEntries[0].designation).to.eql(\"GP1\");",
									"    pm.expect(jsonData.germplasmEntries[0].seedSource).to.eql(\"AA001\");",
									"    pm.expect(jsonData.germplasmEntries[0].entryCode).to.eql(\"1\");",
									"    pm.expect(jsonData.germplasmEntries[0].cross).to.eql(\"A1/B1\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1d903a71-eebb-4567-8dc1-6c325372f19b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/germplasmList/{{crop}}/{{listId}}?",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"germplasmList",
								"{{crop}}",
								"{{listId}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /germplasmList/{cropname}/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef0d628c-61ee-4f17-826a-ab1234039acf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check a list id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listId).to.eql(JSON.parse(pm.environment.get(\"listId\")));",
									"});",
									"",
									"pm.test(\"Check a list name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listName).to.eql(\"Germplasm List 0001\");",
									"});",
									"",
									"pm.test(\"Check a list description\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].description).to.eql(\"List with nametypes and attributes\");",
									"});",
									"",
									"pm.test(\"Check a list notes\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].notes).to.eql(\"For API tests\");",
									"});",
									"",
									"pm.test(\"Check a list size\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listSize).to.eql(20);",
									"});",
									"",
									"pm.test(\"Check a listDetailsUrl\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listDetailsUrl).to.eql((pm.environment.get(\"BMSurl\"))+ (\"/germplasmList/\")+(pm.environment.get(\"crop\"))+\"/\"+(pm.environment.get(\"listId\")));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6da3e804-dac4-47c4-a35a-3f4887cacf1b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/germplasmList/{{crop}}/list?",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"germplasmList",
								"{{crop}}",
								"list"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /germplasmList/{cropname}/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc5f6389-9f54-43c4-9710-ad0c32c67240",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check a list id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listId).to.eql(JSON.parse(pm.environment.get(\"listId\")));",
									"});",
									"",
									"pm.test(\"Check a list name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listName).to.eql(\"Germplasm List 0001\");",
									"});",
									"",
									"pm.test(\"Check a list description\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].description).to.eql(\"List with nametypes and attributes\");",
									"});",
									"",
									"pm.test(\"Check a list notes\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].notes).to.eql(\"For API tests\");",
									"});",
									"",
									"pm.test(\"Check a list size\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listSize).to.eql(20);",
									"});",
									"",
									"pm.test(\"Check a listDetailsUrl\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].listDetailsUrl).to.eql((pm.environment.get(\"BMSurl\"))+ (\"/germplasmList/\")+(pm.environment.get(\"crop\"))+\"/\"+(pm.environment.get(\"listId\")));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "479cc2bf-c01e-41ac-9232-70b8ee142e9f",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/germplasmList/{{crop}}/search?q=germplasm",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"germplasmList",
								"{{crop}}",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "germplasm"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "role-resource",
			"item": [
				{
					"name": "GET /roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "917ad11e-49b1-4121-be56-b8457136cb77",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check Admin role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(1);",
									"    pm.expect(jsonData[0].description).to.eql(\"Admin\");",
									"});",
									"",
									"pm.test(\"Check Breeder role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[1].id).to.eql(2);",
									"    pm.expect(jsonData[1].description).to.eql(\"Breeder\");",
									"});",
									"",
									"pm.test(\"Check Readonly role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[2].id).to.eql(4);",
									"    pm.expect(jsonData[2].description).to.eql(\"Readonly\");",
									"});",
									"",
									"pm.test(\"Check SuperAdmin role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[3].id).to.eql(5);",
									"    pm.expect(jsonData[3].description).to.eql(\"SuperAdmin\");",
									"});",
									"",
									"pm.test(\"Check Technician role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[4].id).to.eql(3);",
									"    pm.expect(jsonData[4].description).to.eql(\"Technician\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "87683e24-e575-4f5c-98f4-12aed4d81469",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/roles",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /roles/assignable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "917ad11e-49b1-4121-be56-b8457136cb77",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check Admin role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).to.eql(1);",
									"    pm.expect(jsonData[0].description).to.eql(\"Admin\");",
									"});",
									"",
									"pm.test(\"Check Breeder role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[1].id).to.eql(2);",
									"    pm.expect(jsonData[1].description).to.eql(\"Breeder\");",
									"});",
									"",
									"pm.test(\"Check Readonly role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[2].id).to.eql(4);",
									"    pm.expect(jsonData[2].description).to.eql(\"Readonly\");",
									"});",
									"",
									"pm.test(\"Check Technician role\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[3].id).to.eql(3);",
									"    pm.expect(jsonData[3].description).to.eql(\"Technician\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5bb97748-6f47-4b29-b6ea-a8ea349c4b9b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/roles/assignable",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"roles",
								"assignable"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ontology-method-service",
			"item": [
				{
					"name": "GET /ontology/{cropname}/methods",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5026143-f343-4c3e-9680-4f30fab8cc32",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*pm.test(\"Checkname\", function () {",
									"    var jsonData = pm.response.json();",
									"    var i;",
									"    for(i=0;i<jsonData.length;i++){",
									"        pm.expect(jsonData).to.have.property(jsonData[i].name,\"Test Method\");",
									"        ",
									"    }",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f77c50b9-234f-4a05-ae92-dfdbf74bc7f9",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/ontology/{{crop}}/methods",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"ontology",
								"{{crop}}",
								"methods"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-sample-services",
			"item": [
				{
					"name": "Verify response code and body when entered valid sampleId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3ef6216-a539-4bc1-97c5-9901d1bb71bb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify returned sampleId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.sampleId).to.eql(pm.environment.get(\"study_sampleId\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b8f31ff2-9c0d-4796-a2cf-9d7a8b5fccf2",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/samples/{{study_sampleId}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"samples",
								"{{study_sampleId}}"
							]
						},
						"description": "GET /{crop}/brapi/v1/samples/{sampleId}"
					},
					"response": []
				},
				{
					"name": "Verify response code and body when entered invalid sampleId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3ef6216-a539-4bc1-97c5-9901d1bb71bb",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Verify returned error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"not found sample\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a95a967c-5069-42b7-a8d2-1dee634f4ce1",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/samples/{{string_not_found}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"samples",
								"{{string_not_found}}"
							]
						},
						"description": "GET /{crop}/brapi/v1/samples/{sampleId}"
					},
					"response": []
				}
			]
		},
		{
			"name": "brapi-trial-services",
			"item": [
				{
					"name": "GET /{crop}/brapi/v1/trials using cropname only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bf22834f-c554-4156-9a11-82ed607a5aea",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials using invalid crop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f8946b98-6222-4fcf-b668-01a9b3b41d9b",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{invalidcrop}}/brapi/v1/trials",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{invalidcrop}}",
								"brapi",
								"v1",
								"trials"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials by programDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c63d983a-ffe3-473e-8f96-120040274df5",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?programDbId={{programDbId}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "programDbId",
									"value": "{{programDbId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials by locationDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f190204f-9c0e-45fa-93b5-9d5c4da5c367",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?locationDbId=9001",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "locationDbId",
									"value": "9001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials by page number and size",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5ea5e24e-b064-4c31-b481-a7d069c86a58",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?page=0&pageSize=2",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials by active status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fe029234-7aee-4dc4-9436-5894e4a4d307",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?status=true",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "status",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials by inactive status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response message is no inactive studies found \", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"No inactive studies found.\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b966588b-728c-4f12-a8f3-53e94982c597",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?active=false",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "active",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials sort by valid field name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ff167e95-3cc7-4c56-a3f1-b8d8a8defdbd",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?sortedBy=trialDbId",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "sortedBy",
									"value": "trialDbId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials  sort by invalid field name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Response message is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"sortBy bad filter, expect trialDbId/trialName/programDbId/programName/startDate/endDate/active\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "03863caa-ba25-4635-b524-06e037473173",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?sortBy=studyId",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "studyId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials sort order ascending",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].trialDbId).to.eql(JSON.parse(pm.environment.get(\"trialStudyId\")));",
									"    pm.expect(jsonData.result.data[1].trialName).to.eql(\"Randomized Trial 20180003\");",
									"    pm.expect(jsonData.result.data[1].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[1].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[1].startDate).to.eql(\"20180912\");",
									"    pm.expect(jsonData.result.data[1].endDate).to.eql(\"20190220\");",
									"    pm.expect(jsonData.result.data[1].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[1].studies[0].studyDbId).to.eql(2);",
									"    pm.expect(jsonData.result.data[1].studies[0].studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationDbId).to.eql(\"9001\");",
									"    pm.expect(jsonData.result.data[1].studies[0].locationName).to.eql(\"Africa Rice Centre\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04cf85a2-b2dd-4812-8726-e087c9817656",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?sortOrder=asc",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "sortOrder",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials sort order descending",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check details of a trial in the list are correct\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].trialDbId).to.eql(3046);",
									"    pm.expect(jsonData.result.data[0].trialName).to.eql(\"Trial for Subobs Dataset Creation\");",
									"    pm.expect(jsonData.result.data[0].programDbId).to.eql(\"c9e335d2-3057-4958-a43e-e38cf61d09ca\");",
									"    pm.expect(jsonData.result.data[0].programName).to.eql(\"API Program\");",
									"    pm.expect(jsonData.result.data[0].startDate).to.eql(\"20190403\");",
									"    pm.expect(jsonData.result.data[0].active).to.eql(true);",
									"});",
									"",
									"pm.test(\"Check details of an associated environment are correct\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0].studies[0].studyDbId).to.eql(9);",
									"    pm.expect(jsonData.result.data[0].studies[0].studyName).to.eql(\"Trial for Subobs Dataset Creation Environment Number 1\");",
									"    pm.expect(jsonData.result.data[0].studies[0].locationDbId).to.eql(\"9000\");",
									"    pm.expect(jsonData.result.data[0].studies[0].locationName).to.eql(\"Int Rice Research Institute\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a9d05ba-c7e2-4cba-91cb-3c80f85fd3f4",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?sortOrder=desc",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "sortOrder",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials invalid sort order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be78fdb1-1e10-4d26-ae64-08c457109902",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.metadata.status[0].message).to.eql(\"sortOrder bad filter, expect asc/desc\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c1a4ec64-c9d8-496d-8533-c2f1183acefd",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials?sortOrder=invalidorder",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials"
							],
							"query": [
								{
									"key": "sortOrder",
									"value": "invalidorder"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials/{trialDbId}/table valid trialDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66ee0321-2114-4447-af7d-1a107e9b28ab",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check trialDbId is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.trialDbId).to.eql(JSON.parse(pm.environment.get(\"studyId\")));",
									"});",
									"",
									"pm.test(\"Check header rows are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.headerRow).to.include(",
									"        \"year\",",
									"        \"studyDbId\",",
									"        \"studyName\",",
									"        \"locationDbId\",",
									"        \"locationName\",",
									"        \"germplasmDbId\",",
									"        \"germplasmName\",",
									"        \"observationUnitDbId\",",
									"        \"plotNumber\",",
									"        \"replicate\",",
									"        \"blockNumber\",",
									"        \"observationTimestamp\",",
									"        \"entryType\",",
									"        \"X\",",
									"        \"Y\",",
									"        \"obsUnitId\");",
									"});",
									"",
									"pm.test(\"Check observation VariableDbIds are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.observationVariableDbIds).to.include(",
									"        18000,",
									"        18010,",
									"        18110);",
									"});",
									"",
									"pm.test(\"Check observation variable names are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.observationVariableNames).to.include(",
									"        \"Grain_yield\",",
									"        \"Biomas_yield\",",
									"        \"Grain_size\");",
									"});",
									"",
									"pm.test(\"Check details of first observation row are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0]).to.include(",
									"    \"2018\",",
									"    \"2\",",
									"    \"Randomized Trial 20180003 Environment Number 1\",",
									"    \"9001\",",
									"    \"WARDA-X\",",
									"    \"24\",",
									"    \"GP4\",",
									"    \"1003\",",
									"    \"1\",",
									"    \"1\",",
									"    null,",
									"    \"UnknownTimestamp\",",
									"    \"Check entry\",",
									"    \"null\",",
									"    \"null\",",
									"    \"PKWDPivJxYgde\",",
									"    \"4\",",
									"    \"18\",",
									"    \"95\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68dd507b-6f75-4cd1-9a62-e861d797fe3c",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials/{{studyId}}/table",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials",
								"{{studyId}}",
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/trials/{trialDbId}/table invalid trialDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b73a1e2-f29f-4947-836c-e5ee2dc9410a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "496544e7-ed9d-421f-a739-698b7031b7be",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/trials/100222/table",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"trials",
								"100222",
								"table"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "location-service",
			"item": [
				{
					"name": "GET /location/{cropname}",
					"item": [
						{
							"name": "Verify response code and body when entered valid cropname and locationTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aafb7ca6-2703-44eb-adbd-164c72e63e29",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Check Default Breeding Location\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.pageResults[0].id).to.eql(\"6001\")",
											"    pm.expect(jsonData.pageResults[0].name).to.eql(\"Default Breeding Location\")",
											"    pm.expect(jsonData.pageResults[0].abbreviation).to.eql(\"DBL\")",
											"    pm.expect(jsonData.pageResults[0].locationType.id).to.eql(\"410\")",
											"});",
											"",
											"pm.test(\"Check Unspecified Location\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.pageResults[1].id).to.eql(\"9016\")",
											"    pm.expect(jsonData.pageResults[1].name).to.eql(\"Unspecified Location\")",
											"    pm.expect(jsonData.pageResults[1].abbreviation).to.eql(\"NOLOC\")",
											"    pm.expect(jsonData.pageResults[1].locationType.id).to.eql(\"410\")",
											"});",
											"",
											"pm.test(\"Check Test Data Location\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.pageResults[2].id).to.eql(\"9017\")",
											"    pm.expect(jsonData.pageResults[2].name).to.eql(\"Test Data Location\")",
											"    pm.expect(jsonData.pageResults[2].abbreviation).to.eql(\"TDL\")",
											"    pm.expect(jsonData.pageResults[2].locationType.id).to.eql(\"410\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{masterToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/location/{{crop}}?locationTypeId=410",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"location",
										"{{crop}}"
									],
									"query": [
										{
											"key": "locationTypeId",
											"value": "410"
										}
									]
								},
								"description": "GET /location/{cropname}"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /location/{cropname}/search",
					"item": [
						{
							"name": "Verify response code and body when entered valid cropname and query string",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aafb7ca6-2703-44eb-adbd-164c72e63e29",
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check Test Data Location\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.pageResults[0].id).to.eql(\"9017\")",
											"    pm.expect(jsonData.pageResults[0].name).to.eql(\"Test Data Location\")",
											"    pm.expect(jsonData.pageResults[0].abbreviation).to.eql(\"TDL\")",
											"    pm.expect(jsonData.pageResults[0].locationType.id).to.eql(\"410\")",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"type": "text",
										"value": "{{masterToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BMSurl}}/location/{{crop}}/search?q=test",
									"host": [
										"{{BMSurl}}"
									],
									"path": [
										"location",
										"{{crop}}",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "test"
										}
									]
								},
								"description": "GET /location/{cropname}/search"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "brapi-study-services",
			"item": [
				{
					"name": "GET /{crop}/brapi/v1/studies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cb2f4a6-f24b-4fd5-83a8-6f5a283f90cf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId} valid studyDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cb2f4a6-f24b-4fd5-83a8-6f5a283f90cf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check details of a study in the list are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.result.studyDbId).to.eql(JSON.parse(pm.environment.get(\"studyDbId\")));\r",
									"    pm.expect(jsonData.result.studyName).to.eql(\"Randomized Trial 20180003 Environment Number 1\");\r",
									"    pm.expect(jsonData.result.seasons).to.include(\r",
									"        \"SEASON_DRY\");\r",
									"    pm.expect(jsonData.result.trialName).to.eql(\"Randomized Trial 20180003\");\r",
									"    pm.expect(jsonData.result.startDate).to.eql(\"20180912\");\r",
									"    pm.expect(jsonData.result.endDate).to.eql(\"20190220\");\r",
									"    pm.expect(jsonData.result.active).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{studyDbId}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId} invalid crop name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25942adc-a5fb-4b10-a8e6-8250d54ca7d6",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{invalidcrop}}/brapi/v1/studies/{{studyDbId}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{invalidcrop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId} invalid studyDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cb2f4a6-f24b-4fd5-83a8-6f5a283f90cf",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.error).to.eql(\"Not Found\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{non_existing_study_id}}",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{non_existing_study_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId}/table invalid crop name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ac0ec88-bff3-4434-af2a-dfaf0029591c",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{invalidcrop}}/brapi/v1/studies/{{studyDbId}}/table",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{invalidcrop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}",
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId}/table valid studyDbId no format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5135b9-8b21-4a08-8fad-ca2814a34cc1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check trialDbId is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.studyDbId).to.eql(JSON.parse(pm.environment.get(\"studyDbId\")));",
									"});",
									"",
									"pm.test(\"Check header rows are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.headerRow).to.include(",
									"        \"year\",",
									"        \"studyDbId\",",
									"        \"studyName\",",
									"        \"locationDbId\",",
									"        \"locationName\",",
									"        \"germplasmDbId\",",
									"        \"germplasmName\",",
									"        \"observationUnitDbId\",",
									"        \"plotNumber\",",
									"        \"replicate\",",
									"        \"blockNumber\",",
									"        \"observationTimestamp\",",
									"        \"entryType\",",
									"        \"X\",",
									"        \"Y\",",
									"        \"obsUnitId\");",
									"});",
									"",
									"pm.test(\"Check observation VariableDbIds are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.observationVariableDbIds).to.include(",
									"        18000,",
									"        18010,",
									"        18110);",
									"});",
									"",
									"pm.test(\"Check observation variable names are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.observationVariableNames).to.include(",
									"        \"Grain_yield\",",
									"        \"Biomas_yield\",",
									"        \"Grain_size\");",
									"});",
									"",
									"pm.test(\"Check details of first observation row are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.data[0]).to.include(",
									"    \"2018\",",
									"    \"2\",",
									"    \"Randomized Trial 20180003 Environment Number 1\",",
									"    \"9001\",",
									"    \"WARDA-X\",",
									"    \"24\",",
									"    \"GP4\",",
									"    \"1003\",",
									"    \"1\",",
									"    \"1\",",
									"    null,",
									"    \"UnknownTimestamp\",",
									"    \"Check entry\",",
									"    \"null\",",
									"    \"null\",",
									"    \"PKWDPivJxYgde\",",
									"    \"4\",",
									"    \"18\",",
									"    \"95\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{studyDbId}}/table",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}",
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId}/table valid studyDbId csv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5135b9-8b21-4a08-8fad-ca2814a34cc1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check headers are correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"year,studyDbId,studyName,locationDbId,locationName,germplasmDbId,germplasmName,observationUnitDbId,plotNumber,replicate,blockNumber,observationTimestamp,entryType,X,Y,obsUnitId,Grain_yield|18000,Biomas_yield|18010,Grain_size|18110\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{studyDbId}}/table?format=csv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}",
								"table"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId}/table invalid studyDbId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cb2f4a6-f24b-4fd5-83a8-6f5a283f90cf",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Error message is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors[0].message).to.eql(\"studyDbId 9999 does not exist\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{non_existing_study_id}}/table",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{non_existing_study_id}}",
								"table"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /{crop}/brapi/v1/studies/{studyDbId}/table valid studyDbId tsv format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5135b9-8b21-4a08-8fad-ca2814a34cc1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check headers are correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"year\tstudyDbId\tstudyName\tlocationDbId\tlocationName\tgermplasmDbId\tgermplasmName\tobservationUnitDbId\tplotNumber\treplicate\tblockNumber\tobservationTimestamp\tentryType\tX\tY\tobsUnitId\tGrain_yield|18000\tBiomas_yield|18010\tGrain_size|18110\");",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{masterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/{{crop}}/brapi/v1/studies/{{studyDbId}}/table?format=tsv",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"{{crop}}",
								"brapi",
								"v1",
								"studies",
								"{{studyDbId}}",
								"table"
							],
							"query": [
								{
									"key": "format",
									"value": "tsv"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ontology-class-service",
			"item": [
				{
					"name": "Verify response code and returned classes when entered valid crop",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1dafa5cf-8e49-4ae1-9358-61b32e79fa54",
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get(\"BMSurl\")+\"/brapi/v1/token\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json'",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            { ",
									"                \"username\": \"admin\",",
									"                \"password\": \"@dm1N\",",
									"                \"grant_type\": \"\",",
									"                \"client_id\": \"\"",
									"            ",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"masterToken\",jsonData.access_token);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "04134399-afdb-48fb-87e8-2d7ce707468e",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check returned classes\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0]).to.equal(\"Abiotic condition\");",
									"    pm.expect(jsonData[1]).to.equal(\"Abiotic stress\");",
									"    pm.expect(jsonData[2]).to.equal(\"Agronomic\");",
									"    pm.expect(jsonData[3]).to.equal(\"Biochemical trait\");",
									"    pm.expect(jsonData[4]).to.equal(\"Biotic condition\");",
									"    pm.expect(jsonData[5]).to.equal(\"Biotic stress\");",
									"    pm.expect(jsonData[6]).to.equal(\"Breeding methods\");",
									"    pm.expect(jsonData[7]).to.equal(\"Breedingprocess\");",
									"    pm.expect(jsonData[8]).to.equal(\"Bulking breeding methods\");",
									"    pm.expect(jsonData[9]).to.equal(\"Climatic condition\");",
									"    pm.expect(jsonData[10]).to.equal(\"Crop research ontology\");",
									"    pm.expect(jsonData[11]).to.equal(\"Crop trait ontology\");",
									"    pm.expect(jsonData[12]).to.equal(\"Crossing methods\");",
									"    pm.expect(jsonData[13]).to.equal(\"Cultivar formation methods\");",
									"    pm.expect(jsonData[14]).to.equal(\"Cytogenetic manipulation\");",
									"    pm.expect(jsonData[15]).to.equal(\"Dataset Condition\");",
									"    pm.expect(jsonData[16]).to.equal(\"Derivative breeding methods\");",
									"    pm.expect(jsonData[17]).to.equal(\"Disease resistance\");",
									"    pm.expect(jsonData[18]).to.equal(\"General\");",
									"    pm.expect(jsonData[19]).to.equal(\"Generative breeding methods\");",
									"    pm.expect(jsonData[20]).to.equal(\"Genetic Modification\");",
									"    pm.expect(jsonData[21]).to.equal(\"Germplasm\");",
									"    pm.expect(jsonData[22]).to.equal(\"Insect and pest resistance\");",
									"    pm.expect(jsonData[23]).to.equal(\"Maintenance methods\");",
									"    pm.expect(jsonData[24]).to.equal(\"Molecular property\");",
									"    pm.expect(jsonData[25]).to.equal(\"Morphological\");",
									"    pm.expect(jsonData[26]).to.equal(\"Mutation methods\");",
									"    pm.expect(jsonData[27]).to.equal(\"Non-bulking breedingmethods\");",
									"    pm.expect(jsonData[28]).to.equal(\"Passport\");",
									"    pm.expect(jsonData[29]).to.equal(\"Phenology\");",
									"    pm.expect(jsonData[30]).to.equal(\"Physiological\");",
									"    pm.expect(jsonData[31]).to.equal(\"Post harvest\");",
									"    pm.expect(jsonData[32]).to.equal(\"Quality\");",
									"    pm.expect(jsonData[33]).to.equal(\"Seed acquisation methods\");",
									"    pm.expect(jsonData[34]).to.equal(\"Seed increase methods\");",
									"    pm.expect(jsonData[35]).to.equal(\"Seed storage\");",
									"    pm.expect(jsonData[36]).to.equal(\"Site condition\");",
									"    pm.expect(jsonData[37]).to.equal(\"Soil condition\");",
									"    pm.expect(jsonData[38]).to.equal(\"Study condition\");",
									"    pm.expect(jsonData[39]).to.equal(\"Trial Design\");",
									"    pm.expect(jsonData[40]).to.equal(\"Trial environment\");",
									"    pm.expect(jsonData[41]).to.equal(\"Trial management\");",
									"    pm.expect(jsonData[42]).to.equal(\"Variate condition\");",
									"    pm.expect(jsonData[43]).to.equal(\"Yield component\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{masterToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BMSurl}}/ontology/{{crop}}/classes",
							"host": [
								"{{BMSurl}}"
							],
							"path": [
								"ontology",
								"{{crop}}",
								"classes"
							]
						},
						"description": "GET /ontology/{cropname}/classes"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "691de698-5868-4ff3-b954-83c983525579",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "819cd631-95d2-4253-bf91-08853b56a5ca",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}